package principal.principalDAO;

public class ClienteDAO {

}
package principal.principalDAO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import principal.Conexao;


public class ClienteDAO {
    private static final String URL = "jdbc:mysql://localhost:3306/agenciaviagens";
    private static final String USUARIO = "root";
    private static final String SENHA = "livia";
    
    
    public void cadastrarCliente(Cliente cliente) {
        try (Connection connection = DriverManager.getConnection(URL, USUARIO, SENHA)) {
            String sql = "INSERT INTO clientes (nome, telefone, email, data_nascimento, metodo_pagamento) VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, cliente.getNome());
                preparedStatement.setString(2, cliente.getTelefone());
                preparedStatement.setString(3, cliente.getEmail());
                preparedStatement.setDate(4, new java.sql.Date(cliente.getDataDeNascimento().getTime()));
                preparedStatement.setString(5, cliente.getMetododePagamento());
                preparedStatement.executeUpdate();
            }
            
        } catch (SQLException e) {
            e.printStackTrace(); 
        }
    }
    
    public List<Cliente> consultarClientes() {
        List<Cliente> clientes = new ArrayList<>();
        try (Connection connection = DriverManager.getConnection(URL, USUARIO, SENHA)) {
            String sql = "SELECT * FROM clientes";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                ResultSet resultSet = preparedStatement.executeQuery();
                while (resultSet.next()) {
                	
                	Cliente cliente = new Cliente();
                    cliente.setIdCliente(resultSet.getInt("id"));
                    cliente.setNome(resultSet.getString("nome"));
                    cliente.setTelefone(resultSet.getString("telefone"));
                    cliente.setEmail(resultSet.getString("email"));
                    cliente.setDataDeNascimento(resultSet.getDate("data_nascimento"));
                    cliente.setMetododePagamento(resultSet.getString("metodo_pagamento"));
                    clientes.add(cliente);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace(); 
        }
        return clientes;
    }
    public void atualizarCliente(Cliente cliente) {
        try (Connection connection = DriverManager.getConnection(URL, USUARIO, SENHA)) {
            String sql = "UPDATE clientes SET nome=?, telefone=?, email=?, data_nascimento=?, metodo_pagamento=? WHERE id=?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, cliente.getNome());
                preparedStatement.setString(2, cliente.getTelefone());
                preparedStatement.setString(3, cliente.getEmail());
                preparedStatement.setDate(4, new java.sql.Date(cliente.getDataDeNascimento().getTime()));
                preparedStatement.setString(5, cliente.getMetododePagamento());
                preparedStatement.setInt(6, cliente.getIdCliente());
                preparedStatement.executeUpdate();
            }
        } catch (SQLException e) {
            e.printStackTrace(); 
        }
    }
    
    public void deletarCliente(int idCliente) {
        try (Connection connection = DriverManager.getConnection(URL, USUARIO, SENHA)) {
            String sql = "DELETE FROM clientes WHERE id=?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setInt(1, idCliente);
                preparedStatement.executeUpdate();
            }
        } catch (SQLException e) {
            e.printStackTrace(); 
        }
    }
}