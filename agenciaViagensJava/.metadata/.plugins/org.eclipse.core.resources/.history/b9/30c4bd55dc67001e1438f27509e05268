package principal.principalDAO;
import principal.Conexao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import principal.Cliente;
public class ClienteDAO {
	   private Connection conexao;
	   public ClienteDAO(Connection conexao) {
	        this.conexao = conexao;
	    }
	   public void cadastrarCliente(Cliente cliente) {
		  

	        String sql = "INSERT INTO cliente ( nome, telefone, email, metodoDePagamento) VALUES (?, ?, ?, ?)";
	        try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
	            preparedStatement.setString(1, cliente.getNome());
	            preparedStatement.setString(2, cliente.getTelefone());
	            preparedStatement.setString(3, cliente.getEmail());
	            
	            preparedStatement.setString(4, cliente.getMetododePagamento());
	            preparedStatement.executeUpdate();
	            System.out.println("Cliente cadastrado com sucesso.");
	        } catch (SQLException e) {
	            System.out.println("Erro ao cadastrar o cliente: " + e.getMessage());
	        }
	   }
	   public List<Cliente> consultarClientes() {
	        List<Cliente> clientes = new ArrayList<>();
	        String sql = "SELECT * FROM cliente";
	        try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
	            ResultSet resultSet = preparedStatement.executeQuery();
	            while (resultSet.next()) {
	                Cliente cliente = new Cliente();
	                cliente.setIdCliente(resultSet.getInt("idCliente"));
	                cliente.setNome(resultSet.getString("nome"));
	                cliente.setTelefone(resultSet.getString("telefone"));
	                cliente.setEmail(resultSet.getString("email"));
	                 cliente.setMetododePagamento(resultSet.getString("metodoDePagamento"));
	                clientes.add(cliente);
	            }
	        } catch (SQLException e) {
	            System.out.println("Erro ao consultar clientes: " + e.getMessage());
	        }
	        return clientes;
	    }
	   public void atualizarCliente(Cliente cliente) {
	        String sql = "UPDATE clientes SET nome=?, telefone=?, email=?, metodoDePagamento=? WHERE id=?";
	        try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
	            preparedStatement.setString(1, cliente.getNome());
	            preparedStatement.setString(2, cliente.getTelefone());
	            preparedStatement.setString(3, cliente.getEmail());
	              preparedStatement.setString(5, cliente.getMetododePagamento());
	            preparedStatement.setInt(6, cliente.getIdCliente());
	            preparedStatement.executeUpdate();
	            System.out.println("Cliente atualizado com sucesso.");
	        } catch (SQLException e) {
	            System.out.println("Erro ao atualizar o cliente: " + e.getMessage());
	        }
	   }
	   public void deletarCliente(int idCliente) {
	        String sql = "DELETE FROM clientes WHERE id=?";
	        try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {
	            preparedStatement.setInt(1, idCliente);
	            preparedStatement.executeUpdate();
	            System.out.println("Cliente deletado com sucesso.");
	        } catch (SQLException e) {
	            System.out.println("Erro ao deletar o cliente: " + e.getMessage());
	        }
	   }
}
